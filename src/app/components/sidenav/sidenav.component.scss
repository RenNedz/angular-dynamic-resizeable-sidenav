:host {
  height: 100vh;

  position: sticky;
  top: 0;

  box-sizing: border-box;

  // make width transition smooth when not resizing manually
  &:not(.resizing) {
    transition: width 0.6s cubic-bezier(0.02, 0.68, 0.63, 0.98);
  }

  &.expanded {
    width: var(--sidenav-width);
  }

  &:not(.expanded) {
    width: 20px;
    cursor: pointer;
  }

  background-color: rgb(237, 241, 243);
}

.sidenav-body-container {
  overflow-x: hidden;

  overflow-y: auto;
  max-height: 100%;
}

.sidenav-body {
  min-width: var(--min-expanded-sidenav-width);

  padding: 1rem;

  box-sizing: border-box;
}

.toggle-button {
  --button-size: 30px;

  position: absolute;

  width: var(--button-size);
  height: var(--button-size);

  top: 60px;
  right: calc(var(--button-size) / -2 + 2px);

  display: flex;
  flex-direction: column;

  justify-content: center;
  align-items: center;

  z-index: 2;

  border: 1px solid rgb(165, 165, 165);
  border-radius: 50%;

  cursor: pointer;

  background-color: white;

  transition: transform 500ms ease-out;

  &:hover,
  &:active {
    border-width: 2px;
    border-color: rgb(93, 159, 235);
    background-color: white;
  }

  &.flipped {
    transform: rotate(180deg);
  }
}

#resizeHandle {
  height: 100%;

  background-color: rgb(165, 165, 165);
  width: 4px;

  position: absolute;
  top: 0;
  right: 0;

  cursor: ew-resize;

  transition: background-color 0.2s ease-out;

  // these are for preventing the user from selecting the resize handle
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  &:hover {
    background-color: rgb(93, 159, 235);
  }

  // buffer to avoid flickering cursor when resizing
  &.resizing::after {
    content: "";
    display: block;

    height: 100%;

    width: 48px;

    position: absolute;
    right: -24px;
    z-index: 1;
  }
}
